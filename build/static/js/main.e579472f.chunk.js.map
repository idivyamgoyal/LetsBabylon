{"version":3,"sources":["components/SceneComponent.js","components/cuboid.js","components/keys.js","components/container.js","App.js","reportWebVitals.js","index.js"],"names":["SceneComponent","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","image","rest","useEffect","current","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","getEngine","window","addEventListener","dispose","removeEventListener","ref","box","cuboid","camera","ArcRotateCamera","Math","PI","Vector3","setTarget","Zero","canvas","getRenderingCanvas","attachControl","HemisphericLight","intensity","MeshBuilder","CreateBox","size","material","StandardMaterial","diffuseTexture","Texture","position","y","undefined","deltaTimeInMillis","getDeltaTime","rpm","rotation","mapBoxToken","map","mapboxgl","accessToken","Container","React","Component","constructor","super","mapFunction","Map","container","this","mapContainer","style","zoom","state","center","lng","lat","preserveDrawingBuffer","handleClick","document","getElementsByClassName","display","setState","getCanvas","toDataURL","setCity","event","city","target","value","onSubmit","async","preventDefault","result","axios","get","latitude","data","features","longitude","console","log","flyTo","essential","err","alert","showSelector","hideMap","createRef","mapSnap","componentDidMount","className","href","src","alt","id","onClick","placeholder","onChange","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e579472f.chunk.js","sourcesContent":["import { Engine, Scene } from \"@babylonjs/core\";\nimport React, { useEffect, useRef } from \"react\";\n\nexport const SceneComponent = (props) => {\n  const reactCanvas = useRef(null);\n  const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, image, ...rest } = props;\n\n  useEffect(() => {\n    if (reactCanvas.current) {\n      const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\n      const scene = new Scene(engine, sceneOptions);\n      if (scene.isReady()) {\n        props.onSceneReady(scene, props.image);\n      } else {\n        scene.onReadyObservable.addOnce((scene) => props.onSceneReady(scene, props.image));\n      }\n\n      engine.runRenderLoop(() => {\n        if (typeof onRender === \"function\") {\n          onRender(scene);\n        }\n        scene.render();\n      });\n\n      const resize = () => {\n        scene.getEngine().resize();\n      };\n\n      if (window) {\n        window.addEventListener(\"resize\", resize);\n      }\n\n      return () => {\n        scene.getEngine().dispose();\n\n        if (window) {\n          window.removeEventListener(\"resize\", resize);\n        }\n      };\n    }\n  });\n\n  return <canvas ref={reactCanvas} {...rest} />;\n};\n\n// export default SceneComponent;","import { Vector3, HemisphericLight, MeshBuilder, StandardMaterial, Texture, ArcRotateCamera } from \"@babylonjs/core\";\n\nlet box;\nconst onSceneReady = (scene, image) => {\n    // This creates and positions a free camera (non-mesh)\n    // var camera = new FreeCamera(\"camera1\", new Vector3(0, 8, -10), scene);\n    const camera = new ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new Vector3(0, 4.5, -15), scene);\n    camera.setTarget(Vector3.Zero());\n    const canvas = scene.getEngine().getRenderingCanvas();\n\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    var light = new HemisphericLight(\"light\", new Vector3(0, 0.5, 0.5), scene);\n\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 10;\n\n    // Our built-in 'box' shape.\n    box = MeshBuilder.CreateBox(\"box\", {\n        size: 4\n    }, scene);\n    var material = new StandardMaterial('material', scene);\n    material.diffuseTexture = new Texture(image, scene);\n\n    box.position.y = 1;\n    // box.position.z = 1;\n\n    box.material = material;\n};\n\n/**\n * Will run on every frame render.  We are spinning the box on y-axis.\n */\nconst onRender = (scene) => {\n    if (box !== undefined) {\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n        const rpm = 5;\n        box.rotation.y += (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\n    }\n};\n\nconst cuboid = {\n    onSceneReady: onSceneReady,\n    onRender: onRender\n};\n\nexport default cuboid;","export const mapBoxToken = \"pk.eyJ1IjoiZGl2eWFtZ295YWwiLCJhIjoiY2txZmJxNjc3MmJocDMybXZ1cDQ0cjBkcCJ9.AqDvkF4lnM0OgBlwEGdYiA\";","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { SceneComponent } from './SceneComponent';\nimport cuboid from './cuboid';\nimport { mapBoxToken} from './keys';\nimport axios from 'axios';\n\nvar map;\nmapboxgl.accessToken = mapBoxToken;\n\nexport default class Container extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // default delhi\n            lat: 28.6139391,\n            lng: 77.2090212,\n            zoom: 9,\n            city: '',\n            image: '',\n        };\n        this.mapContainer = React.createRef();\n        this.mapSnap = React.createRef();\n    }\n\n    mapFunction = () => {\n        map = new mapboxgl.Map({\n            container: this.mapContainer.current,\n            style: \"mapbox://styles/mapbox/outdoors-v11\",\n            zoom: this.state.zoom,\n            center: [this.state.lng, this.state.lat],\n            preserveDrawingBuffer: true\n        });\n        map.resize();\n    }\n\n    componentDidMount() {\n        this.mapFunction();\n    }\n\n    handleClick = () => {\n        document.getElementsByClassName('mapSelector')[0].style.display = 'none';\n        document.getElementsByClassName('mapBtn')[0].style.display = 'block';\n        this.setState({\n            image: map.getCanvas().toDataURL()\n        });\n    };\n\n    setCity = (event) => {\n        this.setState({\n            city: event.target.value\n        });\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const result = await axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.city}.json?access_token=${mapBoxToken}`);\n            const latitude = result.data.features[0].center[1];\n            const longitude = result.data.features[0].center[0];\n            this.setState({\n                lat: latitude,\n                lng: longitude,\n                city: ''\n            }, () => {\n                console.log(this.state.lat, this.state.lng);\n                map.flyTo({\n                    center: [this.state.lng, this.state.lat],\n                    essential: true\n                });\n            });\n        }\n        catch(err) {\n            console.log(\"Error in location: \" + err);\n            alert(\"Invalid Search!\");\n        }\n    }\n\n    showSelector = () => {\n        document.getElementsByClassName('mapSelector')[0].style.display = 'block';\n        map.resize();\n        document.getElementsByClassName('mapBtn')[0].style.display = 'none';\n    }\n\n    hideMap = () => {\n        document.getElementsByClassName('mapSelector')[0].style.display = 'none';\n        document.getElementsByClassName('mapBtn')[0].style.display = 'block';\n    }\n\n    render() {\n        return (\n            <div className=\"fullBody\">\n                <div className=\"mainDiv\">\n                    <div className=\"header\">\n                        <span className=\"headerText-left\"><a href=\".\">Lets Babylon!</a></span>\n                        <a href=\"https://divyamgoyal.com\"><img src={process.env.PUBLIC_URL + \"/assets/favicons/favicon.ico\"} className=\"headerText-right\" alt=\"DivyamGoyal\" /></a>\n                    </div>\n                    <div className=\"appBody\">\n                        <div ref={this.mapSnap} id=\"screenshotPlaceholder\">\n                            <SceneComponent antialias onSceneReady={cuboid.onSceneReady} onRender={cuboid.onRender} image={this.state.image} id=\"my-canvas\" />\n                            <div className=\"mapSelector\">\n                                <div className=\"searchForm\">\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-danger\" onClick={this.handleClick}>\n                                            Take Screenshot\n                                        </button>\n                                    </div>\n                                    <form className=\"form-inline\" onSubmit={this.onSubmit}>\n                                        <div className=\"form-group mx-sm-3 mb-2\">\n                                            <input className=\"form-control\" placeholder=\"Enter the City Name\" onChange={this.setCity} value={this.state.city} />\n                                        </div>\n                                        <input className=\"btn btn-success mb-2\" type=\"submit\" value=\"Search\" />\n                                    </form>\n                                </div>\n                                <div ref={this.mapContainer} className=\"map-container\" />\n                                <div className=\"closeMap\">\n                                    <button className=\"btn btn-warning circleBtn\" onClick={this.hideMap}>X</button>\n                                </div>\n                            </div>\n                            <div className=\"mapBtn\">\n                                <button className=\"btn btn-light\" onClick={this.showSelector}>Map</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"myFooter\">\n                    <div className=\"container\">\n                        <a href=\"https://divyamgoyal.com\"><img src={process.env.PUBLIC_URL + \"/assets/favicons/favicon-32x32.png\"} className=\"headerText-right\" alt=\"DivyamGoyal\" /></a>\n                        <div>\n                            Developed by <a href=\"https://divyamgoyal.com\">Divyam Goyal</a>.\n                        </div>\n                        <div>\n                            <a href=\"https://github.com/idivyamgoyal\">Github</a> | <a href=\"https://linkedin.com/in/idivyamgoyal\">LinkedIn</a> | <a href=\"mailto:divyamgoyal9930@gmail.com\">Mail</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import './App.css';\nimport Container from './components/container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n      <Container />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}